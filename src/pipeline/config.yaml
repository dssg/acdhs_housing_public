# YAML file

random_seed: 42

config_version: 'prod'

# if this is set to true, it will override any other rerun flags!
rerun_all: False # set to true for new experiment, set all rerun flags to false to continue existing experiment

base_filepath: '/mnt/data/projects/acdhs-housing/pipelines'

logging:
  save_filepath: 'logging'
  filename: '<my log file>'

experiment_config:
  experiment_table_name: 'experiment_metadata'
  sql_filepath: 'src/pipeline/pipeline_db_setup.sql'

db_config:
  db_name: "acdhs-housing"
  role_name: "acdhs-housing-role"
  schema_name: "pipeline"

temporal_config:
  feature_start_date: "2011-01-01"
  feature_end_date: "2018-01-01" # label timespan is set to 1 year, therefore feature end date is one year before the evaluation date
  training_as_of_date_frequency: "3 month"
  last_validation_date: "2019-01-01"
  model_update_frequency: "3 months" # how frequently to retrain models
  label_timespan: "12 months"
  nr_of_validation_folds: 12
  start_with_split: 0

cohort_config:
  rerun: True
  filepath: "src/pipeline/cohort/cohort_creator.sql" # cohort of people with an eviction filing in the last 4 months
  #filepath: "src/pipeline/cohort/cohort_creator_all_interactions.sql" # large cohort with individuals that interacted with acdhs in the last x years
  #filepath: "src/pipeline/cohort/cohort_creator_first_time_hl.sql" # cohort of NOT PREVIOUSLY HL people with an eviction filing in the last 4 months
  #filepath: "src/pipeline/cohort/cohort_creator_previously_hl.sql" # cohort of PREVIOUSLY HL people with an eviction filing in the last 4 months
  table_name: "cohort"
  cohort_evict_timespan: "4 months"
  currently_hl_timespan: "4 months"
  cohort_large_interaction_with_acdhs_timespan: "1year"

hl_definition_config:
  filepath: "src/pipeline/cohort/homelessness_table.sql"
  program_keys: "(263)" # this is a broad category capturing all relevant hl services for our label
  program_keys_detailed: "('263', '29', '32', '33', '264', '31', '103')" # this is a more granular list of hl services to analyze the interactions of people selected by the model
  hl_imputed_duration: "1 month" # specifies hl spell duration in absence of daily information (involvement feed)
  hmis_programs: "('Emergency Shelter', 'ESG: Shelter', 'Street Outreach', 'Transitional Housing', 'Emergency Housing/Motel-Hotel', 'Path Street Outreach')"
  hmis_ph_programs: "('Transitional Housing', 'PH - Rapid Re-Housing', 'PH - Permanent Supportive Housing', 'Bridge Housing', 'Penn Free Bridge', 'Rapid Re-Housing Demo', 'Permanent Housing (e.g., Mod Rehab SRO, subsidized housing without services)', 'YHDP RRH', 'Safe Haven', 'CMI Bridge')"
  table_name: "hl_table"
  data_type: "('feed', 'hmis', 'hmis_ph')" # specifies which data type to use for the definition of homelessness. Could be hmis, feed, or both


feature_config:
  feature_groups: ["baseline_age_first_involvement", "address_feed", "baseline_day_diff_ofp", "behavioral_health", "cyf", "demographics_simple", "eviction_trends", "evictions", "hl_table", "hl_trends", "mental_health", "physical_health", "program_involvement", "public_housing", "state_programs", "month_dummies"]
  rerun: True
  feature_config_filename: 'src/pipeline/config/feature_config.py'

label_config:
  rerun: True
  filepath: "src/pipeline/labels/label_creator.sql"
  table_name: "homelessness_label"

evaluation:
  metrics: [precision, recall]
  top_n: [10, 20, 25, 50, 75, 100, 125, 150, 175, 200, 250, 300, 500, 750, 1000]
  metrics_table_name: "model_results"
  save_filepath: "evaluation"
  groups: 
    race: ["White", "Black/African American"]
    gender: ["1~Male", "2~Female", "99~Unknown"]
    days_since_hl_imp: [0, 1]
  generate_iterative_plots: False
  evaluate_over_time: 
    metric: 'precision'
    top_n: 100
    max_regret: 1
  feature_importance:
    plot_top_n: 50
    store_top_n: 500
    table_name: "feature_importance"
  feature_correlation:
    top_n: 50 # calculate for all features unless otherwise specified
    table_name: "correlation_features"
  
post_modeling: 
  select_best_models: 
    metric: 'precision'
    top_n: 100
    nr_best_models: 10
    by_model_type: False
  bias_audit: 
    metric: 'tpr'
    top_n: 100
    groups: 
      race: ["Black/African American", "White"]
      gender: ["2~Female", "1~Male", "99~Unknown"]
      days_since_hl_imp: [0, 1]
    disparity_tolerance: 1.3



matrix_config:
  rerun: True
  save_filepath: "data"
  table_name: "matrix_metadata"

modeling_config:
  save_filepath: 'model_pkls'
  model_table_name: 'model_metadata'
  model_params_table_name: 'model_params'
  model_group_table_name: 'model_groups'
  predictions_table_name: 'model_predictions'
  metadata_sql_filepath: 'src/pipeline/model/create_modeling_metadata.sql'
  model_names:
    - 'adaboost'
    - 'calibrated_classifier'
    - 'decision_tree'
    - 'knn'
    - 'lgbm'
    - 'mlpc'
    - 'random_forest'
    - 'scaled_logistic_regression'
    - 'xg_boost'
  run_all_baselines: True
  model_params: {
    'scaled_logistic_regression': {
      'max_iter': [500],
      'penalty': ['l2'], 'solver': ['lbfgs'], 'C': [0.0001, 0.001, 0.01, 0.005, 0.015, 0.0015, 0.1],
      #'penalty': ['l1'], 'solver': ['saga'], 'C': [0.00001, 0.0001, 0.001, 0.01, 0.1, 1.0],
    },
    'decision_tree': {
      'criterion': ['gini'],
      'max_depth': [1, 2, 5, 10, 100, 500, null],
      'min_samples_split': [10,100],
    },
    'random_forest': {
      'n_estimators': [1000, 5000],
      'criterion': ['gini'],
      'max_depth': [100, 500],
      'min_samples_split': [2, 10, 100],
      'min_samples_leaf': [1, 25, 100],
      'max_features': ['sqrt'],
      'n_jobs': [58]
    },
    'adaboost': {
      'n_estimators': [200, 300],
      'learning_rate': [0.1, 0.5]
    },
    'lgbm': {
      'boosting_type': ['dart'],
      'n_estimators': [100, 300],
      'num_leaves': [31],
      'max_depth': [-1, 10, 100],
    },
    'calibrated_classifier': {
      'base_estimator': ['linear_svc', 'gaussian_nb']
    },
    'knn': {
      'n_neighbors': [5, 10, 20, 50],
      'leaf_size': [10, 30, 50, 100],
    },
    'xg_boost': {
      'booster': ['gbtree'],
      'learning_rate': [0.1],
      'n_estimators': [300],
      'max_depth': [40],
      #'reg_alpha': [0.1, 1],
      #'reg_lambda': [0.1, 1],
    },
    'mlpc': {
      'solver': ['adam'],
      'activation': ['relu'],
      'alpha': [0.0001, 0.001, 0.1, 1, 10],
      #'hidden_layer_sizes': [[10,], [100,]]
      'hidden_layer_sizes': [[100,], [150, 100, 50,], [256, 128, 64, 32,], [36, 36, 36,]],
      'learning_rate_init': [0.1]
    },
    'baseline_days_since_ofp': {
      required_feature_group: ['baseline_day_diff_ofp']
    },
    'baseline_days_since_current_filing': {
      required_feature_group: ['evictions']
    },
    'baseline_days_since_last_hl': {
      required_feature_group: ['hl_table']
    },
    'baseline_days_since_last_program_involvement': {
      required_feature_group: ['program_involvement']
    },
    'baseline_num_program_involvement_spells': {
      required_feature_group: ['program_involvement']
    },
    'baseline_num_distinct_programs': {
      required_feature_group: ['program_involvement']
    },
    'baseline_age_at_first_program_involvement': {
      required_feature_group: ['baseline_age_first_involvement']
    },
    'baseline_age_at_first_adult_program_involvement': {
      required_feature_group: ['baseline_age_first_involvement']
    },
  }
